<?php

namespace ContainerVbCSKIq;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getLegacy_Route_HandlerService extends App_KernelProdContainer
{
    /*
     * Gets the public 'legacy.route.handler' shared autowired service.
     *
     * @return \App\Routes\Service\LegacyRouteHandler
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 3).'/core/backend/Routes/Service/LegacyRouteHandler.php';
        include_once \dirname(__DIR__, 3).'/core/backend/Routes/Service/LegacyEntryPointRedirectHandler.php';
        include_once \dirname(__DIR__, 3).'/core/backend/EntryPoint/LegacyHandler/EntryPointHandler.php';

        return $container->services['legacy.route.handler'] = new \App\Routes\Service\LegacyRouteHandler(($container->privates['App\\Routes\\Service\\LegacyApiRedirectHandler'] ?? self::getLegacyApiRedirectHandlerService($container)), ($container->privates['App\\Routes\\Service\\LegacyNonViewActionRedirectHandler'] ?? self::getLegacyNonViewActionRedirectHandlerService($container)), ($container->privates['App\\Routes\\Service\\LegacyAssetRedirectHandler'] ?? self::getLegacyAssetRedirectHandlerService($container)), new \App\Routes\Service\LegacyEntryPointRedirectHandler(new \App\EntryPoint\LegacyHandler\EntryPointHandler(\dirname(__DIR__, 3), (\dirname(__DIR__, 3).'/public/legacy'), 'SCRMSESSID', 'SCRMSESSID', ($container->privates['App\\Engine\\LegacyHandler\\LegacyScopeState'] ??= new \App\Engine\LegacyHandler\LegacyScopeState()), ($container->services['request_stack'] ??= new \Symfony\Component\HttpFoundation\RequestStack())), $container->parameters['legacy.entrypoint_paths'], '/legacy'));
    }
}
